# SPDX-FileCopyrightText: 2024 Shun Sakai
#
# SPDX-License-Identifier: Apache-2.0 OR MIT

name: CI

on:
  pull_request:
  push:
    branches:
      - "develop"
      - "master"
  schedule:
    - cron: "0 0 * * 0"

jobs:
  test:
    name: Test
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        toolchain:
          - 1.73.0 # MSRV
          - stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: "latest"
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.7.3
      - name: Run tests
        run: wasm-pack test --node

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.7.3
      - name: Check code formatted
        run: cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.7.3
      - name: Check no lint warnings
        run: cargo clippy -- -D warnings

  doc:
    name: Documentation
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.7.3
      - name: Check no `rustdoc` lint warnings
        run: RUSTDOCFLAGS="-D warnings" cargo doc --no-deps --document-private-items --all-features

  wasm-examples:
    name: Examples for the Wasm bindings
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: Setup Deno
        uses: denoland/setup-deno@v1.1.4
        with:
          deno-version: v1.x
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: "latest"
      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.7.3
      - name: Check code formatted
        run: deno fmt --check examples/*.ts
      - name: Check no lint warnings
        run: deno lint examples/*.ts
      - name: Type-check
        run: |
          wasm-pack build -t deno
          deno check examples/*.ts

  semver:
    name: Semantic Versioning
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check Semantic Versioning
        uses: obi1kenobi/cargo-semver-checks-action@v2.4
